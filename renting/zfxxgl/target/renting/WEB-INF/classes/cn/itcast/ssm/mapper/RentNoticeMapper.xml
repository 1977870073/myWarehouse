<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.itcast.ssm.mapper.RentNoticeMapper">
  <resultMap id="BaseResultMap" type="cn.itcast.ssm.po.RentNotice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="admin" jdbcType="VARCHAR" property="admin" />
    <result column="user" jdbcType="VARCHAR" property="user" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
    <result column="sendFlag" jdbcType="INTEGER" property="sendflag" />
    <result column="doTime" jdbcType="VARCHAR" property="dotime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.itcast.ssm.po.RentNotice">
    <result column="message" jdbcType="LONGVARCHAR" property="message" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, admin, user, flag, sendFlag, doTime
  </sql>
  <sql id="Blob_Column_List">
    message
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="cn.itcast.ssm.po.RentNoticeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from rent_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.itcast.ssm.po.RentNoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from rent_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from rent_notice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rent_notice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.itcast.ssm.po.RentNoticeExample">
    delete from rent_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.itcast.ssm.po.RentNotice">
    insert into rent_notice (id, admin, user, 
      flag, sendFlag, doTime, 
      message)
    values (#{id,jdbcType=INTEGER}, #{admin,jdbcType=VARCHAR}, #{user,jdbcType=VARCHAR}, 
      #{flag,jdbcType=INTEGER}, #{sendflag,jdbcType=INTEGER}, #{dotime,jdbcType=VARCHAR}, 
      #{message,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.itcast.ssm.po.RentNotice">
    insert into rent_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="admin != null">
        admin,
      </if>
      <if test="user != null">
        user,
      </if>
      <if test="flag != null">
        flag,
      </if>
      <if test="sendflag != null">
        sendFlag,
      </if>
      <if test="dotime != null">
        doTime,
      </if>
      <if test="message != null">
        message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="admin != null">
        #{admin,jdbcType=VARCHAR},
      </if>
      <if test="user != null">
        #{user,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="sendflag != null">
        #{sendflag,jdbcType=INTEGER},
      </if>
      <if test="dotime != null">
        #{dotime,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.itcast.ssm.po.RentNoticeExample" resultType="java.lang.Long">
    select count(*) from rent_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update rent_notice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.admin != null">
        admin = #{record.admin,jdbcType=VARCHAR},
      </if>
      <if test="record.user != null">
        user = #{record.user,jdbcType=VARCHAR},
      </if>
      <if test="record.flag != null">
        flag = #{record.flag,jdbcType=INTEGER},
      </if>
      <if test="record.sendflag != null">
        sendFlag = #{record.sendflag,jdbcType=INTEGER},
      </if>
      <if test="record.dotime != null">
        doTime = #{record.dotime,jdbcType=VARCHAR},
      </if>
      <if test="record.message != null">
        message = #{record.message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update rent_notice
    set id = #{record.id,jdbcType=INTEGER},
      admin = #{record.admin,jdbcType=VARCHAR},
      user = #{record.user,jdbcType=VARCHAR},
      flag = #{record.flag,jdbcType=INTEGER},
      sendFlag = #{record.sendflag,jdbcType=INTEGER},
      doTime = #{record.dotime,jdbcType=VARCHAR},
      message = #{record.message,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update rent_notice
    set id = #{record.id,jdbcType=INTEGER},
      admin = #{record.admin,jdbcType=VARCHAR},
      user = #{record.user,jdbcType=VARCHAR},
      flag = #{record.flag,jdbcType=INTEGER},
      sendFlag = #{record.sendflag,jdbcType=INTEGER},
      doTime = #{record.dotime,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.itcast.ssm.po.RentNotice">
    update rent_notice
    <set>
      <if test="admin != null">
        admin = #{admin,jdbcType=VARCHAR},
      </if>
      <if test="user != null">
        user = #{user,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="sendflag != null">
        sendFlag = #{sendflag,jdbcType=INTEGER},
      </if>
      <if test="dotime != null">
        doTime = #{dotime,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.itcast.ssm.po.RentNotice">
    update rent_notice
    set admin = #{admin,jdbcType=VARCHAR},
      user = #{user,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER},
      sendFlag = #{sendflag,jdbcType=INTEGER},
      doTime = #{dotime,jdbcType=VARCHAR},
      message = #{message,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.itcast.ssm.po.RentNotice">
    update rent_notice
    set admin = #{admin,jdbcType=VARCHAR},
      user = #{user,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER},
      sendFlag = #{sendflag,jdbcType=INTEGER},
      doTime = #{dotime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>